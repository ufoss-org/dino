plugins {
    id 'net.researchgate.release'
}

println("Using Gradle version: $gradle.gradleVersion")

subprojects {
    // Regular java modules need 'java-library' plugin for proper publication
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
//    apply plugin: 'jacoco'

    repositories {
        mavenCentral()
    }

    java {
        modularity.inferModulePath = true
    }

    dependencies {
        // import BOM
        testImplementation platform("org.junit:junit-bom:$junit_bom_version")


        implementation "org.slf4j:slf4j-api:$slf4j_version"
        implementation "org.jetbrains:annotations:$jetbrains_annotations_version"


        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testImplementation "org.assertj:assertj-core:$assertj_version"
        testImplementation "org.slf4j:slf4j-simple:$slf4j_version"

        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    test {
        useJUnitPlatform()
        testLogging {
            events 'passed', 'failed', 'skipped'
            showStandardStreams = true
        }
    }

//    jacoco {
//        toolVersion = "0.8.5"
//    }
//
//    tasks.withType(Test) {
//        jacoco.includeNoLocationClasses = true
//        jacoco.excludes = ['jdk.internal.*']
//    }
//
//    jacocoTestReport {
//        dependsOn(test)
//
//        reports {
//            html.enabled = true
//            xml.enabled = true
//        }
//    }

    // --------------- Source & Javadoc artifacts + publishing ---------------

    javadoc {
        options.tags = [ "implNote", "implSpec" ]
    }

    // generate xxx-sources.jar and xxx-javadoc.jar
    java {
        withSourcesJar()
        withJavadocJar()
    }

    publishing {
        repositories {
            maven {
                def user = 'ufoss'
                def repo = 'ufoss'
                def name = 'dino'
                url = "https://api.bintray.com/maven/$user/$repo/$name/;publish=0"

                credentials {
                    username = project.hasProperty('bintray_user') ? project.property('bintray_user') : System.getenv('BINTRAY_USER')
                    password = project.hasProperty('bintray_api_key') ? project.property('bintray_api_key') : System.getenv('BINTRAY_API_KEY')
                }
            }
        }

        publications {
            maven(MavenPublication) {
                artifactId = project.name
                from components.java
                pom {
                    name = project.name
                    description = 'Dino is a IO library based on Project Loom virtual threads and Foreign Memory '
                    url = 'https://github.com/ufoss-org/dino'
                    licenses {
                        license {
                            name = 'The Unlicence'
                            url = 'https://unlicense.org'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/ufoss-org/dino.git'
                        url = 'https://github.com/ufoss-org/dino.git'
                    }
                }
            }
        }
    }
}

// Workaround for https://github.com/researchgate/gradle-release/issues/144
task build {
    dependsOn subprojects.findResults { it.tasks.findByName('build') }
}

// when version changes :
// -> execute ./gradlew wrapper, then remove .gradle directory, then execute ./gradlew wrapper again
wrapper {
    gradleVersion = '6.5.1'
    distributionType = Wrapper.DistributionType.ALL
}
